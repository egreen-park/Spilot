#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1500569955103598890) {
   out_1500569955103598890[0] = 0;
   out_1500569955103598890[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1500569955103598890[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1500569955103598890[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1500569955103598890[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1500569955103598890[5] = -sin(in_vec[1]);
   out_1500569955103598890[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1500569955103598890[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1500569955103598890[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1500569955103598890[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1500569955103598890[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1500569955103598890[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1500569955103598890[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1500569955103598890[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1500569955103598890[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1500569955103598890[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1500569955103598890[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1500569955103598890[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6370410215467224596) {
   out_6370410215467224596[0] = delta_x[0] + nom_x[0];
   out_6370410215467224596[1] = delta_x[1] + nom_x[1];
   out_6370410215467224596[2] = delta_x[2] + nom_x[2];
   out_6370410215467224596[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6370410215467224596[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6370410215467224596[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6370410215467224596[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6370410215467224596[7] = delta_x[6] + nom_x[7];
   out_6370410215467224596[8] = delta_x[7] + nom_x[8];
   out_6370410215467224596[9] = delta_x[8] + nom_x[9];
   out_6370410215467224596[10] = delta_x[9] + nom_x[10];
   out_6370410215467224596[11] = delta_x[10] + nom_x[11];
   out_6370410215467224596[12] = delta_x[11] + nom_x[12];
   out_6370410215467224596[13] = delta_x[12] + nom_x[13];
   out_6370410215467224596[14] = delta_x[13] + nom_x[14];
   out_6370410215467224596[15] = delta_x[14] + nom_x[15];
   out_6370410215467224596[16] = delta_x[15] + nom_x[16];
   out_6370410215467224596[17] = delta_x[16] + nom_x[17];
   out_6370410215467224596[18] = delta_x[17] + nom_x[18];
   out_6370410215467224596[19] = delta_x[18] + nom_x[19];
   out_6370410215467224596[20] = delta_x[19] + nom_x[20];
   out_6370410215467224596[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4404289754720028568) {
   out_4404289754720028568[0] = -nom_x[0] + true_x[0];
   out_4404289754720028568[1] = -nom_x[1] + true_x[1];
   out_4404289754720028568[2] = -nom_x[2] + true_x[2];
   out_4404289754720028568[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4404289754720028568[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4404289754720028568[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4404289754720028568[6] = -nom_x[7] + true_x[7];
   out_4404289754720028568[7] = -nom_x[8] + true_x[8];
   out_4404289754720028568[8] = -nom_x[9] + true_x[9];
   out_4404289754720028568[9] = -nom_x[10] + true_x[10];
   out_4404289754720028568[10] = -nom_x[11] + true_x[11];
   out_4404289754720028568[11] = -nom_x[12] + true_x[12];
   out_4404289754720028568[12] = -nom_x[13] + true_x[13];
   out_4404289754720028568[13] = -nom_x[14] + true_x[14];
   out_4404289754720028568[14] = -nom_x[15] + true_x[15];
   out_4404289754720028568[15] = -nom_x[16] + true_x[16];
   out_4404289754720028568[16] = -nom_x[17] + true_x[17];
   out_4404289754720028568[17] = -nom_x[18] + true_x[18];
   out_4404289754720028568[18] = -nom_x[19] + true_x[19];
   out_4404289754720028568[19] = -nom_x[20] + true_x[20];
   out_4404289754720028568[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_65844624761511818) {
   out_65844624761511818[0] = 1.0;
   out_65844624761511818[1] = 0;
   out_65844624761511818[2] = 0;
   out_65844624761511818[3] = 0;
   out_65844624761511818[4] = 0;
   out_65844624761511818[5] = 0;
   out_65844624761511818[6] = 0;
   out_65844624761511818[7] = 0;
   out_65844624761511818[8] = 0;
   out_65844624761511818[9] = 0;
   out_65844624761511818[10] = 0;
   out_65844624761511818[11] = 0;
   out_65844624761511818[12] = 0;
   out_65844624761511818[13] = 0;
   out_65844624761511818[14] = 0;
   out_65844624761511818[15] = 0;
   out_65844624761511818[16] = 0;
   out_65844624761511818[17] = 0;
   out_65844624761511818[18] = 0;
   out_65844624761511818[19] = 0;
   out_65844624761511818[20] = 0;
   out_65844624761511818[21] = 0;
   out_65844624761511818[22] = 1.0;
   out_65844624761511818[23] = 0;
   out_65844624761511818[24] = 0;
   out_65844624761511818[25] = 0;
   out_65844624761511818[26] = 0;
   out_65844624761511818[27] = 0;
   out_65844624761511818[28] = 0;
   out_65844624761511818[29] = 0;
   out_65844624761511818[30] = 0;
   out_65844624761511818[31] = 0;
   out_65844624761511818[32] = 0;
   out_65844624761511818[33] = 0;
   out_65844624761511818[34] = 0;
   out_65844624761511818[35] = 0;
   out_65844624761511818[36] = 0;
   out_65844624761511818[37] = 0;
   out_65844624761511818[38] = 0;
   out_65844624761511818[39] = 0;
   out_65844624761511818[40] = 0;
   out_65844624761511818[41] = 0;
   out_65844624761511818[42] = 0;
   out_65844624761511818[43] = 0;
   out_65844624761511818[44] = 1.0;
   out_65844624761511818[45] = 0;
   out_65844624761511818[46] = 0;
   out_65844624761511818[47] = 0;
   out_65844624761511818[48] = 0;
   out_65844624761511818[49] = 0;
   out_65844624761511818[50] = 0;
   out_65844624761511818[51] = 0;
   out_65844624761511818[52] = 0;
   out_65844624761511818[53] = 0;
   out_65844624761511818[54] = 0;
   out_65844624761511818[55] = 0;
   out_65844624761511818[56] = 0;
   out_65844624761511818[57] = 0;
   out_65844624761511818[58] = 0;
   out_65844624761511818[59] = 0;
   out_65844624761511818[60] = 0;
   out_65844624761511818[61] = 0;
   out_65844624761511818[62] = 0;
   out_65844624761511818[63] = 0;
   out_65844624761511818[64] = 0;
   out_65844624761511818[65] = 0;
   out_65844624761511818[66] = -0.5*state[4];
   out_65844624761511818[67] = -0.5*state[5];
   out_65844624761511818[68] = -0.5*state[6];
   out_65844624761511818[69] = 0;
   out_65844624761511818[70] = 0;
   out_65844624761511818[71] = 0;
   out_65844624761511818[72] = 0;
   out_65844624761511818[73] = 0;
   out_65844624761511818[74] = 0;
   out_65844624761511818[75] = 0;
   out_65844624761511818[76] = 0;
   out_65844624761511818[77] = 0;
   out_65844624761511818[78] = 0;
   out_65844624761511818[79] = 0;
   out_65844624761511818[80] = 0;
   out_65844624761511818[81] = 0;
   out_65844624761511818[82] = 0;
   out_65844624761511818[83] = 0;
   out_65844624761511818[84] = 0;
   out_65844624761511818[85] = 0;
   out_65844624761511818[86] = 0;
   out_65844624761511818[87] = 0.5*state[3];
   out_65844624761511818[88] = 0.5*state[6];
   out_65844624761511818[89] = -0.5*state[5];
   out_65844624761511818[90] = 0;
   out_65844624761511818[91] = 0;
   out_65844624761511818[92] = 0;
   out_65844624761511818[93] = 0;
   out_65844624761511818[94] = 0;
   out_65844624761511818[95] = 0;
   out_65844624761511818[96] = 0;
   out_65844624761511818[97] = 0;
   out_65844624761511818[98] = 0;
   out_65844624761511818[99] = 0;
   out_65844624761511818[100] = 0;
   out_65844624761511818[101] = 0;
   out_65844624761511818[102] = 0;
   out_65844624761511818[103] = 0;
   out_65844624761511818[104] = 0;
   out_65844624761511818[105] = 0;
   out_65844624761511818[106] = 0;
   out_65844624761511818[107] = 0;
   out_65844624761511818[108] = -0.5*state[6];
   out_65844624761511818[109] = 0.5*state[3];
   out_65844624761511818[110] = 0.5*state[4];
   out_65844624761511818[111] = 0;
   out_65844624761511818[112] = 0;
   out_65844624761511818[113] = 0;
   out_65844624761511818[114] = 0;
   out_65844624761511818[115] = 0;
   out_65844624761511818[116] = 0;
   out_65844624761511818[117] = 0;
   out_65844624761511818[118] = 0;
   out_65844624761511818[119] = 0;
   out_65844624761511818[120] = 0;
   out_65844624761511818[121] = 0;
   out_65844624761511818[122] = 0;
   out_65844624761511818[123] = 0;
   out_65844624761511818[124] = 0;
   out_65844624761511818[125] = 0;
   out_65844624761511818[126] = 0;
   out_65844624761511818[127] = 0;
   out_65844624761511818[128] = 0;
   out_65844624761511818[129] = 0.5*state[5];
   out_65844624761511818[130] = -0.5*state[4];
   out_65844624761511818[131] = 0.5*state[3];
   out_65844624761511818[132] = 0;
   out_65844624761511818[133] = 0;
   out_65844624761511818[134] = 0;
   out_65844624761511818[135] = 0;
   out_65844624761511818[136] = 0;
   out_65844624761511818[137] = 0;
   out_65844624761511818[138] = 0;
   out_65844624761511818[139] = 0;
   out_65844624761511818[140] = 0;
   out_65844624761511818[141] = 0;
   out_65844624761511818[142] = 0;
   out_65844624761511818[143] = 0;
   out_65844624761511818[144] = 0;
   out_65844624761511818[145] = 0;
   out_65844624761511818[146] = 0;
   out_65844624761511818[147] = 0;
   out_65844624761511818[148] = 0;
   out_65844624761511818[149] = 0;
   out_65844624761511818[150] = 0;
   out_65844624761511818[151] = 0;
   out_65844624761511818[152] = 0;
   out_65844624761511818[153] = 1.0;
   out_65844624761511818[154] = 0;
   out_65844624761511818[155] = 0;
   out_65844624761511818[156] = 0;
   out_65844624761511818[157] = 0;
   out_65844624761511818[158] = 0;
   out_65844624761511818[159] = 0;
   out_65844624761511818[160] = 0;
   out_65844624761511818[161] = 0;
   out_65844624761511818[162] = 0;
   out_65844624761511818[163] = 0;
   out_65844624761511818[164] = 0;
   out_65844624761511818[165] = 0;
   out_65844624761511818[166] = 0;
   out_65844624761511818[167] = 0;
   out_65844624761511818[168] = 0;
   out_65844624761511818[169] = 0;
   out_65844624761511818[170] = 0;
   out_65844624761511818[171] = 0;
   out_65844624761511818[172] = 0;
   out_65844624761511818[173] = 0;
   out_65844624761511818[174] = 0;
   out_65844624761511818[175] = 1.0;
   out_65844624761511818[176] = 0;
   out_65844624761511818[177] = 0;
   out_65844624761511818[178] = 0;
   out_65844624761511818[179] = 0;
   out_65844624761511818[180] = 0;
   out_65844624761511818[181] = 0;
   out_65844624761511818[182] = 0;
   out_65844624761511818[183] = 0;
   out_65844624761511818[184] = 0;
   out_65844624761511818[185] = 0;
   out_65844624761511818[186] = 0;
   out_65844624761511818[187] = 0;
   out_65844624761511818[188] = 0;
   out_65844624761511818[189] = 0;
   out_65844624761511818[190] = 0;
   out_65844624761511818[191] = 0;
   out_65844624761511818[192] = 0;
   out_65844624761511818[193] = 0;
   out_65844624761511818[194] = 0;
   out_65844624761511818[195] = 0;
   out_65844624761511818[196] = 0;
   out_65844624761511818[197] = 1.0;
   out_65844624761511818[198] = 0;
   out_65844624761511818[199] = 0;
   out_65844624761511818[200] = 0;
   out_65844624761511818[201] = 0;
   out_65844624761511818[202] = 0;
   out_65844624761511818[203] = 0;
   out_65844624761511818[204] = 0;
   out_65844624761511818[205] = 0;
   out_65844624761511818[206] = 0;
   out_65844624761511818[207] = 0;
   out_65844624761511818[208] = 0;
   out_65844624761511818[209] = 0;
   out_65844624761511818[210] = 0;
   out_65844624761511818[211] = 0;
   out_65844624761511818[212] = 0;
   out_65844624761511818[213] = 0;
   out_65844624761511818[214] = 0;
   out_65844624761511818[215] = 0;
   out_65844624761511818[216] = 0;
   out_65844624761511818[217] = 0;
   out_65844624761511818[218] = 0;
   out_65844624761511818[219] = 1.0;
   out_65844624761511818[220] = 0;
   out_65844624761511818[221] = 0;
   out_65844624761511818[222] = 0;
   out_65844624761511818[223] = 0;
   out_65844624761511818[224] = 0;
   out_65844624761511818[225] = 0;
   out_65844624761511818[226] = 0;
   out_65844624761511818[227] = 0;
   out_65844624761511818[228] = 0;
   out_65844624761511818[229] = 0;
   out_65844624761511818[230] = 0;
   out_65844624761511818[231] = 0;
   out_65844624761511818[232] = 0;
   out_65844624761511818[233] = 0;
   out_65844624761511818[234] = 0;
   out_65844624761511818[235] = 0;
   out_65844624761511818[236] = 0;
   out_65844624761511818[237] = 0;
   out_65844624761511818[238] = 0;
   out_65844624761511818[239] = 0;
   out_65844624761511818[240] = 0;
   out_65844624761511818[241] = 1.0;
   out_65844624761511818[242] = 0;
   out_65844624761511818[243] = 0;
   out_65844624761511818[244] = 0;
   out_65844624761511818[245] = 0;
   out_65844624761511818[246] = 0;
   out_65844624761511818[247] = 0;
   out_65844624761511818[248] = 0;
   out_65844624761511818[249] = 0;
   out_65844624761511818[250] = 0;
   out_65844624761511818[251] = 0;
   out_65844624761511818[252] = 0;
   out_65844624761511818[253] = 0;
   out_65844624761511818[254] = 0;
   out_65844624761511818[255] = 0;
   out_65844624761511818[256] = 0;
   out_65844624761511818[257] = 0;
   out_65844624761511818[258] = 0;
   out_65844624761511818[259] = 0;
   out_65844624761511818[260] = 0;
   out_65844624761511818[261] = 0;
   out_65844624761511818[262] = 0;
   out_65844624761511818[263] = 1.0;
   out_65844624761511818[264] = 0;
   out_65844624761511818[265] = 0;
   out_65844624761511818[266] = 0;
   out_65844624761511818[267] = 0;
   out_65844624761511818[268] = 0;
   out_65844624761511818[269] = 0;
   out_65844624761511818[270] = 0;
   out_65844624761511818[271] = 0;
   out_65844624761511818[272] = 0;
   out_65844624761511818[273] = 0;
   out_65844624761511818[274] = 0;
   out_65844624761511818[275] = 0;
   out_65844624761511818[276] = 0;
   out_65844624761511818[277] = 0;
   out_65844624761511818[278] = 0;
   out_65844624761511818[279] = 0;
   out_65844624761511818[280] = 0;
   out_65844624761511818[281] = 0;
   out_65844624761511818[282] = 0;
   out_65844624761511818[283] = 0;
   out_65844624761511818[284] = 0;
   out_65844624761511818[285] = 1.0;
   out_65844624761511818[286] = 0;
   out_65844624761511818[287] = 0;
   out_65844624761511818[288] = 0;
   out_65844624761511818[289] = 0;
   out_65844624761511818[290] = 0;
   out_65844624761511818[291] = 0;
   out_65844624761511818[292] = 0;
   out_65844624761511818[293] = 0;
   out_65844624761511818[294] = 0;
   out_65844624761511818[295] = 0;
   out_65844624761511818[296] = 0;
   out_65844624761511818[297] = 0;
   out_65844624761511818[298] = 0;
   out_65844624761511818[299] = 0;
   out_65844624761511818[300] = 0;
   out_65844624761511818[301] = 0;
   out_65844624761511818[302] = 0;
   out_65844624761511818[303] = 0;
   out_65844624761511818[304] = 0;
   out_65844624761511818[305] = 0;
   out_65844624761511818[306] = 0;
   out_65844624761511818[307] = 1.0;
   out_65844624761511818[308] = 0;
   out_65844624761511818[309] = 0;
   out_65844624761511818[310] = 0;
   out_65844624761511818[311] = 0;
   out_65844624761511818[312] = 0;
   out_65844624761511818[313] = 0;
   out_65844624761511818[314] = 0;
   out_65844624761511818[315] = 0;
   out_65844624761511818[316] = 0;
   out_65844624761511818[317] = 0;
   out_65844624761511818[318] = 0;
   out_65844624761511818[319] = 0;
   out_65844624761511818[320] = 0;
   out_65844624761511818[321] = 0;
   out_65844624761511818[322] = 0;
   out_65844624761511818[323] = 0;
   out_65844624761511818[324] = 0;
   out_65844624761511818[325] = 0;
   out_65844624761511818[326] = 0;
   out_65844624761511818[327] = 0;
   out_65844624761511818[328] = 0;
   out_65844624761511818[329] = 1.0;
   out_65844624761511818[330] = 0;
   out_65844624761511818[331] = 0;
   out_65844624761511818[332] = 0;
   out_65844624761511818[333] = 0;
   out_65844624761511818[334] = 0;
   out_65844624761511818[335] = 0;
   out_65844624761511818[336] = 0;
   out_65844624761511818[337] = 0;
   out_65844624761511818[338] = 0;
   out_65844624761511818[339] = 0;
   out_65844624761511818[340] = 0;
   out_65844624761511818[341] = 0;
   out_65844624761511818[342] = 0;
   out_65844624761511818[343] = 0;
   out_65844624761511818[344] = 0;
   out_65844624761511818[345] = 0;
   out_65844624761511818[346] = 0;
   out_65844624761511818[347] = 0;
   out_65844624761511818[348] = 0;
   out_65844624761511818[349] = 0;
   out_65844624761511818[350] = 0;
   out_65844624761511818[351] = 1.0;
   out_65844624761511818[352] = 0;
   out_65844624761511818[353] = 0;
   out_65844624761511818[354] = 0;
   out_65844624761511818[355] = 0;
   out_65844624761511818[356] = 0;
   out_65844624761511818[357] = 0;
   out_65844624761511818[358] = 0;
   out_65844624761511818[359] = 0;
   out_65844624761511818[360] = 0;
   out_65844624761511818[361] = 0;
   out_65844624761511818[362] = 0;
   out_65844624761511818[363] = 0;
   out_65844624761511818[364] = 0;
   out_65844624761511818[365] = 0;
   out_65844624761511818[366] = 0;
   out_65844624761511818[367] = 0;
   out_65844624761511818[368] = 0;
   out_65844624761511818[369] = 0;
   out_65844624761511818[370] = 0;
   out_65844624761511818[371] = 0;
   out_65844624761511818[372] = 0;
   out_65844624761511818[373] = 1.0;
   out_65844624761511818[374] = 0;
   out_65844624761511818[375] = 0;
   out_65844624761511818[376] = 0;
   out_65844624761511818[377] = 0;
   out_65844624761511818[378] = 0;
   out_65844624761511818[379] = 0;
   out_65844624761511818[380] = 0;
   out_65844624761511818[381] = 0;
   out_65844624761511818[382] = 0;
   out_65844624761511818[383] = 0;
   out_65844624761511818[384] = 0;
   out_65844624761511818[385] = 0;
   out_65844624761511818[386] = 0;
   out_65844624761511818[387] = 0;
   out_65844624761511818[388] = 0;
   out_65844624761511818[389] = 0;
   out_65844624761511818[390] = 0;
   out_65844624761511818[391] = 0;
   out_65844624761511818[392] = 0;
   out_65844624761511818[393] = 0;
   out_65844624761511818[394] = 0;
   out_65844624761511818[395] = 1.0;
   out_65844624761511818[396] = 0;
   out_65844624761511818[397] = 0;
   out_65844624761511818[398] = 0;
   out_65844624761511818[399] = 0;
   out_65844624761511818[400] = 0;
   out_65844624761511818[401] = 0;
   out_65844624761511818[402] = 0;
   out_65844624761511818[403] = 0;
   out_65844624761511818[404] = 0;
   out_65844624761511818[405] = 0;
   out_65844624761511818[406] = 0;
   out_65844624761511818[407] = 0;
   out_65844624761511818[408] = 0;
   out_65844624761511818[409] = 0;
   out_65844624761511818[410] = 0;
   out_65844624761511818[411] = 0;
   out_65844624761511818[412] = 0;
   out_65844624761511818[413] = 0;
   out_65844624761511818[414] = 0;
   out_65844624761511818[415] = 0;
   out_65844624761511818[416] = 0;
   out_65844624761511818[417] = 1.0;
   out_65844624761511818[418] = 0;
   out_65844624761511818[419] = 0;
   out_65844624761511818[420] = 0;
   out_65844624761511818[421] = 0;
   out_65844624761511818[422] = 0;
   out_65844624761511818[423] = 0;
   out_65844624761511818[424] = 0;
   out_65844624761511818[425] = 0;
   out_65844624761511818[426] = 0;
   out_65844624761511818[427] = 0;
   out_65844624761511818[428] = 0;
   out_65844624761511818[429] = 0;
   out_65844624761511818[430] = 0;
   out_65844624761511818[431] = 0;
   out_65844624761511818[432] = 0;
   out_65844624761511818[433] = 0;
   out_65844624761511818[434] = 0;
   out_65844624761511818[435] = 0;
   out_65844624761511818[436] = 0;
   out_65844624761511818[437] = 0;
   out_65844624761511818[438] = 0;
   out_65844624761511818[439] = 1.0;
   out_65844624761511818[440] = 0;
   out_65844624761511818[441] = 0;
   out_65844624761511818[442] = 0;
   out_65844624761511818[443] = 0;
   out_65844624761511818[444] = 0;
   out_65844624761511818[445] = 0;
   out_65844624761511818[446] = 0;
   out_65844624761511818[447] = 0;
   out_65844624761511818[448] = 0;
   out_65844624761511818[449] = 0;
   out_65844624761511818[450] = 0;
   out_65844624761511818[451] = 0;
   out_65844624761511818[452] = 0;
   out_65844624761511818[453] = 0;
   out_65844624761511818[454] = 0;
   out_65844624761511818[455] = 0;
   out_65844624761511818[456] = 0;
   out_65844624761511818[457] = 0;
   out_65844624761511818[458] = 0;
   out_65844624761511818[459] = 0;
   out_65844624761511818[460] = 0;
   out_65844624761511818[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4639761141299267529) {
   out_4639761141299267529[0] = dt*state[7] + state[0];
   out_4639761141299267529[1] = dt*state[8] + state[1];
   out_4639761141299267529[2] = dt*state[9] + state[2];
   out_4639761141299267529[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4639761141299267529[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4639761141299267529[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4639761141299267529[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4639761141299267529[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4639761141299267529[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4639761141299267529[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4639761141299267529[10] = state[10];
   out_4639761141299267529[11] = state[11];
   out_4639761141299267529[12] = state[12];
   out_4639761141299267529[13] = state[13];
   out_4639761141299267529[14] = state[14];
   out_4639761141299267529[15] = state[15];
   out_4639761141299267529[16] = state[16];
   out_4639761141299267529[17] = state[17];
   out_4639761141299267529[18] = state[18];
   out_4639761141299267529[19] = state[19];
   out_4639761141299267529[20] = state[20];
   out_4639761141299267529[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2080679607502804155) {
   out_2080679607502804155[0] = 1;
   out_2080679607502804155[1] = 0;
   out_2080679607502804155[2] = 0;
   out_2080679607502804155[3] = 0;
   out_2080679607502804155[4] = 0;
   out_2080679607502804155[5] = 0;
   out_2080679607502804155[6] = dt;
   out_2080679607502804155[7] = 0;
   out_2080679607502804155[8] = 0;
   out_2080679607502804155[9] = 0;
   out_2080679607502804155[10] = 0;
   out_2080679607502804155[11] = 0;
   out_2080679607502804155[12] = 0;
   out_2080679607502804155[13] = 0;
   out_2080679607502804155[14] = 0;
   out_2080679607502804155[15] = 0;
   out_2080679607502804155[16] = 0;
   out_2080679607502804155[17] = 0;
   out_2080679607502804155[18] = 0;
   out_2080679607502804155[19] = 0;
   out_2080679607502804155[20] = 0;
   out_2080679607502804155[21] = 0;
   out_2080679607502804155[22] = 1;
   out_2080679607502804155[23] = 0;
   out_2080679607502804155[24] = 0;
   out_2080679607502804155[25] = 0;
   out_2080679607502804155[26] = 0;
   out_2080679607502804155[27] = 0;
   out_2080679607502804155[28] = dt;
   out_2080679607502804155[29] = 0;
   out_2080679607502804155[30] = 0;
   out_2080679607502804155[31] = 0;
   out_2080679607502804155[32] = 0;
   out_2080679607502804155[33] = 0;
   out_2080679607502804155[34] = 0;
   out_2080679607502804155[35] = 0;
   out_2080679607502804155[36] = 0;
   out_2080679607502804155[37] = 0;
   out_2080679607502804155[38] = 0;
   out_2080679607502804155[39] = 0;
   out_2080679607502804155[40] = 0;
   out_2080679607502804155[41] = 0;
   out_2080679607502804155[42] = 0;
   out_2080679607502804155[43] = 0;
   out_2080679607502804155[44] = 1;
   out_2080679607502804155[45] = 0;
   out_2080679607502804155[46] = 0;
   out_2080679607502804155[47] = 0;
   out_2080679607502804155[48] = 0;
   out_2080679607502804155[49] = 0;
   out_2080679607502804155[50] = dt;
   out_2080679607502804155[51] = 0;
   out_2080679607502804155[52] = 0;
   out_2080679607502804155[53] = 0;
   out_2080679607502804155[54] = 0;
   out_2080679607502804155[55] = 0;
   out_2080679607502804155[56] = 0;
   out_2080679607502804155[57] = 0;
   out_2080679607502804155[58] = 0;
   out_2080679607502804155[59] = 0;
   out_2080679607502804155[60] = 0;
   out_2080679607502804155[61] = 0;
   out_2080679607502804155[62] = 0;
   out_2080679607502804155[63] = 0;
   out_2080679607502804155[64] = 0;
   out_2080679607502804155[65] = 0;
   out_2080679607502804155[66] = 1;
   out_2080679607502804155[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2080679607502804155[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2080679607502804155[69] = 0;
   out_2080679607502804155[70] = 0;
   out_2080679607502804155[71] = 0;
   out_2080679607502804155[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2080679607502804155[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2080679607502804155[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2080679607502804155[75] = 0;
   out_2080679607502804155[76] = 0;
   out_2080679607502804155[77] = 0;
   out_2080679607502804155[78] = 0;
   out_2080679607502804155[79] = 0;
   out_2080679607502804155[80] = 0;
   out_2080679607502804155[81] = 0;
   out_2080679607502804155[82] = 0;
   out_2080679607502804155[83] = 0;
   out_2080679607502804155[84] = 0;
   out_2080679607502804155[85] = 0;
   out_2080679607502804155[86] = 0;
   out_2080679607502804155[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2080679607502804155[88] = 1;
   out_2080679607502804155[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2080679607502804155[90] = 0;
   out_2080679607502804155[91] = 0;
   out_2080679607502804155[92] = 0;
   out_2080679607502804155[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2080679607502804155[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2080679607502804155[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2080679607502804155[96] = 0;
   out_2080679607502804155[97] = 0;
   out_2080679607502804155[98] = 0;
   out_2080679607502804155[99] = 0;
   out_2080679607502804155[100] = 0;
   out_2080679607502804155[101] = 0;
   out_2080679607502804155[102] = 0;
   out_2080679607502804155[103] = 0;
   out_2080679607502804155[104] = 0;
   out_2080679607502804155[105] = 0;
   out_2080679607502804155[106] = 0;
   out_2080679607502804155[107] = 0;
   out_2080679607502804155[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2080679607502804155[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2080679607502804155[110] = 1;
   out_2080679607502804155[111] = 0;
   out_2080679607502804155[112] = 0;
   out_2080679607502804155[113] = 0;
   out_2080679607502804155[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2080679607502804155[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2080679607502804155[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2080679607502804155[117] = 0;
   out_2080679607502804155[118] = 0;
   out_2080679607502804155[119] = 0;
   out_2080679607502804155[120] = 0;
   out_2080679607502804155[121] = 0;
   out_2080679607502804155[122] = 0;
   out_2080679607502804155[123] = 0;
   out_2080679607502804155[124] = 0;
   out_2080679607502804155[125] = 0;
   out_2080679607502804155[126] = 0;
   out_2080679607502804155[127] = 0;
   out_2080679607502804155[128] = 0;
   out_2080679607502804155[129] = 0;
   out_2080679607502804155[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2080679607502804155[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2080679607502804155[132] = 1;
   out_2080679607502804155[133] = 0;
   out_2080679607502804155[134] = 0;
   out_2080679607502804155[135] = 0;
   out_2080679607502804155[136] = 0;
   out_2080679607502804155[137] = 0;
   out_2080679607502804155[138] = 0;
   out_2080679607502804155[139] = 0;
   out_2080679607502804155[140] = 0;
   out_2080679607502804155[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2080679607502804155[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2080679607502804155[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2080679607502804155[144] = 0;
   out_2080679607502804155[145] = 0;
   out_2080679607502804155[146] = 0;
   out_2080679607502804155[147] = 0;
   out_2080679607502804155[148] = 0;
   out_2080679607502804155[149] = 0;
   out_2080679607502804155[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2080679607502804155[151] = 0;
   out_2080679607502804155[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2080679607502804155[153] = 0;
   out_2080679607502804155[154] = 1;
   out_2080679607502804155[155] = 0;
   out_2080679607502804155[156] = 0;
   out_2080679607502804155[157] = 0;
   out_2080679607502804155[158] = 0;
   out_2080679607502804155[159] = 0;
   out_2080679607502804155[160] = 0;
   out_2080679607502804155[161] = 0;
   out_2080679607502804155[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2080679607502804155[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2080679607502804155[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2080679607502804155[165] = 0;
   out_2080679607502804155[166] = 0;
   out_2080679607502804155[167] = 0;
   out_2080679607502804155[168] = 0;
   out_2080679607502804155[169] = 0;
   out_2080679607502804155[170] = 0;
   out_2080679607502804155[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2080679607502804155[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2080679607502804155[173] = 0;
   out_2080679607502804155[174] = 0;
   out_2080679607502804155[175] = 0;
   out_2080679607502804155[176] = 1;
   out_2080679607502804155[177] = 0;
   out_2080679607502804155[178] = 0;
   out_2080679607502804155[179] = 0;
   out_2080679607502804155[180] = 0;
   out_2080679607502804155[181] = 0;
   out_2080679607502804155[182] = 0;
   out_2080679607502804155[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2080679607502804155[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2080679607502804155[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2080679607502804155[186] = 0;
   out_2080679607502804155[187] = 0;
   out_2080679607502804155[188] = 0;
   out_2080679607502804155[189] = 0;
   out_2080679607502804155[190] = 0;
   out_2080679607502804155[191] = 0;
   out_2080679607502804155[192] = 0;
   out_2080679607502804155[193] = 0;
   out_2080679607502804155[194] = 0;
   out_2080679607502804155[195] = 0;
   out_2080679607502804155[196] = 0;
   out_2080679607502804155[197] = 0;
   out_2080679607502804155[198] = 1;
   out_2080679607502804155[199] = 0;
   out_2080679607502804155[200] = 0;
   out_2080679607502804155[201] = 0;
   out_2080679607502804155[202] = 0;
   out_2080679607502804155[203] = 0;
   out_2080679607502804155[204] = 0;
   out_2080679607502804155[205] = 0;
   out_2080679607502804155[206] = 0;
   out_2080679607502804155[207] = 0;
   out_2080679607502804155[208] = 0;
   out_2080679607502804155[209] = 0;
   out_2080679607502804155[210] = 0;
   out_2080679607502804155[211] = 0;
   out_2080679607502804155[212] = 0;
   out_2080679607502804155[213] = 0;
   out_2080679607502804155[214] = 0;
   out_2080679607502804155[215] = 0;
   out_2080679607502804155[216] = 0;
   out_2080679607502804155[217] = 0;
   out_2080679607502804155[218] = 0;
   out_2080679607502804155[219] = 0;
   out_2080679607502804155[220] = 1;
   out_2080679607502804155[221] = 0;
   out_2080679607502804155[222] = 0;
   out_2080679607502804155[223] = 0;
   out_2080679607502804155[224] = 0;
   out_2080679607502804155[225] = 0;
   out_2080679607502804155[226] = 0;
   out_2080679607502804155[227] = 0;
   out_2080679607502804155[228] = 0;
   out_2080679607502804155[229] = 0;
   out_2080679607502804155[230] = 0;
   out_2080679607502804155[231] = 0;
   out_2080679607502804155[232] = 0;
   out_2080679607502804155[233] = 0;
   out_2080679607502804155[234] = 0;
   out_2080679607502804155[235] = 0;
   out_2080679607502804155[236] = 0;
   out_2080679607502804155[237] = 0;
   out_2080679607502804155[238] = 0;
   out_2080679607502804155[239] = 0;
   out_2080679607502804155[240] = 0;
   out_2080679607502804155[241] = 0;
   out_2080679607502804155[242] = 1;
   out_2080679607502804155[243] = 0;
   out_2080679607502804155[244] = 0;
   out_2080679607502804155[245] = 0;
   out_2080679607502804155[246] = 0;
   out_2080679607502804155[247] = 0;
   out_2080679607502804155[248] = 0;
   out_2080679607502804155[249] = 0;
   out_2080679607502804155[250] = 0;
   out_2080679607502804155[251] = 0;
   out_2080679607502804155[252] = 0;
   out_2080679607502804155[253] = 0;
   out_2080679607502804155[254] = 0;
   out_2080679607502804155[255] = 0;
   out_2080679607502804155[256] = 0;
   out_2080679607502804155[257] = 0;
   out_2080679607502804155[258] = 0;
   out_2080679607502804155[259] = 0;
   out_2080679607502804155[260] = 0;
   out_2080679607502804155[261] = 0;
   out_2080679607502804155[262] = 0;
   out_2080679607502804155[263] = 0;
   out_2080679607502804155[264] = 1;
   out_2080679607502804155[265] = 0;
   out_2080679607502804155[266] = 0;
   out_2080679607502804155[267] = 0;
   out_2080679607502804155[268] = 0;
   out_2080679607502804155[269] = 0;
   out_2080679607502804155[270] = 0;
   out_2080679607502804155[271] = 0;
   out_2080679607502804155[272] = 0;
   out_2080679607502804155[273] = 0;
   out_2080679607502804155[274] = 0;
   out_2080679607502804155[275] = 0;
   out_2080679607502804155[276] = 0;
   out_2080679607502804155[277] = 0;
   out_2080679607502804155[278] = 0;
   out_2080679607502804155[279] = 0;
   out_2080679607502804155[280] = 0;
   out_2080679607502804155[281] = 0;
   out_2080679607502804155[282] = 0;
   out_2080679607502804155[283] = 0;
   out_2080679607502804155[284] = 0;
   out_2080679607502804155[285] = 0;
   out_2080679607502804155[286] = 1;
   out_2080679607502804155[287] = 0;
   out_2080679607502804155[288] = 0;
   out_2080679607502804155[289] = 0;
   out_2080679607502804155[290] = 0;
   out_2080679607502804155[291] = 0;
   out_2080679607502804155[292] = 0;
   out_2080679607502804155[293] = 0;
   out_2080679607502804155[294] = 0;
   out_2080679607502804155[295] = 0;
   out_2080679607502804155[296] = 0;
   out_2080679607502804155[297] = 0;
   out_2080679607502804155[298] = 0;
   out_2080679607502804155[299] = 0;
   out_2080679607502804155[300] = 0;
   out_2080679607502804155[301] = 0;
   out_2080679607502804155[302] = 0;
   out_2080679607502804155[303] = 0;
   out_2080679607502804155[304] = 0;
   out_2080679607502804155[305] = 0;
   out_2080679607502804155[306] = 0;
   out_2080679607502804155[307] = 0;
   out_2080679607502804155[308] = 1;
   out_2080679607502804155[309] = 0;
   out_2080679607502804155[310] = 0;
   out_2080679607502804155[311] = 0;
   out_2080679607502804155[312] = 0;
   out_2080679607502804155[313] = 0;
   out_2080679607502804155[314] = 0;
   out_2080679607502804155[315] = 0;
   out_2080679607502804155[316] = 0;
   out_2080679607502804155[317] = 0;
   out_2080679607502804155[318] = 0;
   out_2080679607502804155[319] = 0;
   out_2080679607502804155[320] = 0;
   out_2080679607502804155[321] = 0;
   out_2080679607502804155[322] = 0;
   out_2080679607502804155[323] = 0;
   out_2080679607502804155[324] = 0;
   out_2080679607502804155[325] = 0;
   out_2080679607502804155[326] = 0;
   out_2080679607502804155[327] = 0;
   out_2080679607502804155[328] = 0;
   out_2080679607502804155[329] = 0;
   out_2080679607502804155[330] = 1;
   out_2080679607502804155[331] = 0;
   out_2080679607502804155[332] = 0;
   out_2080679607502804155[333] = 0;
   out_2080679607502804155[334] = 0;
   out_2080679607502804155[335] = 0;
   out_2080679607502804155[336] = 0;
   out_2080679607502804155[337] = 0;
   out_2080679607502804155[338] = 0;
   out_2080679607502804155[339] = 0;
   out_2080679607502804155[340] = 0;
   out_2080679607502804155[341] = 0;
   out_2080679607502804155[342] = 0;
   out_2080679607502804155[343] = 0;
   out_2080679607502804155[344] = 0;
   out_2080679607502804155[345] = 0;
   out_2080679607502804155[346] = 0;
   out_2080679607502804155[347] = 0;
   out_2080679607502804155[348] = 0;
   out_2080679607502804155[349] = 0;
   out_2080679607502804155[350] = 0;
   out_2080679607502804155[351] = 0;
   out_2080679607502804155[352] = 1;
   out_2080679607502804155[353] = 0;
   out_2080679607502804155[354] = 0;
   out_2080679607502804155[355] = 0;
   out_2080679607502804155[356] = 0;
   out_2080679607502804155[357] = 0;
   out_2080679607502804155[358] = 0;
   out_2080679607502804155[359] = 0;
   out_2080679607502804155[360] = 0;
   out_2080679607502804155[361] = 0;
   out_2080679607502804155[362] = 0;
   out_2080679607502804155[363] = 0;
   out_2080679607502804155[364] = 0;
   out_2080679607502804155[365] = 0;
   out_2080679607502804155[366] = 0;
   out_2080679607502804155[367] = 0;
   out_2080679607502804155[368] = 0;
   out_2080679607502804155[369] = 0;
   out_2080679607502804155[370] = 0;
   out_2080679607502804155[371] = 0;
   out_2080679607502804155[372] = 0;
   out_2080679607502804155[373] = 0;
   out_2080679607502804155[374] = 1;
   out_2080679607502804155[375] = 0;
   out_2080679607502804155[376] = 0;
   out_2080679607502804155[377] = 0;
   out_2080679607502804155[378] = 0;
   out_2080679607502804155[379] = 0;
   out_2080679607502804155[380] = 0;
   out_2080679607502804155[381] = 0;
   out_2080679607502804155[382] = 0;
   out_2080679607502804155[383] = 0;
   out_2080679607502804155[384] = 0;
   out_2080679607502804155[385] = 0;
   out_2080679607502804155[386] = 0;
   out_2080679607502804155[387] = 0;
   out_2080679607502804155[388] = 0;
   out_2080679607502804155[389] = 0;
   out_2080679607502804155[390] = 0;
   out_2080679607502804155[391] = 0;
   out_2080679607502804155[392] = 0;
   out_2080679607502804155[393] = 0;
   out_2080679607502804155[394] = 0;
   out_2080679607502804155[395] = 0;
   out_2080679607502804155[396] = 1;
   out_2080679607502804155[397] = 0;
   out_2080679607502804155[398] = 0;
   out_2080679607502804155[399] = 0;
   out_2080679607502804155[400] = 0;
   out_2080679607502804155[401] = 0;
   out_2080679607502804155[402] = 0;
   out_2080679607502804155[403] = 0;
   out_2080679607502804155[404] = 0;
   out_2080679607502804155[405] = 0;
   out_2080679607502804155[406] = 0;
   out_2080679607502804155[407] = 0;
   out_2080679607502804155[408] = 0;
   out_2080679607502804155[409] = 0;
   out_2080679607502804155[410] = 0;
   out_2080679607502804155[411] = 0;
   out_2080679607502804155[412] = 0;
   out_2080679607502804155[413] = 0;
   out_2080679607502804155[414] = 0;
   out_2080679607502804155[415] = 0;
   out_2080679607502804155[416] = 0;
   out_2080679607502804155[417] = 0;
   out_2080679607502804155[418] = 1;
   out_2080679607502804155[419] = 0;
   out_2080679607502804155[420] = 0;
   out_2080679607502804155[421] = 0;
   out_2080679607502804155[422] = 0;
   out_2080679607502804155[423] = 0;
   out_2080679607502804155[424] = 0;
   out_2080679607502804155[425] = 0;
   out_2080679607502804155[426] = 0;
   out_2080679607502804155[427] = 0;
   out_2080679607502804155[428] = 0;
   out_2080679607502804155[429] = 0;
   out_2080679607502804155[430] = 0;
   out_2080679607502804155[431] = 0;
   out_2080679607502804155[432] = 0;
   out_2080679607502804155[433] = 0;
   out_2080679607502804155[434] = 0;
   out_2080679607502804155[435] = 0;
   out_2080679607502804155[436] = 0;
   out_2080679607502804155[437] = 0;
   out_2080679607502804155[438] = 0;
   out_2080679607502804155[439] = 0;
   out_2080679607502804155[440] = 1;
}
void h_4(double *state, double *unused, double *out_6128971225621953021) {
   out_6128971225621953021[0] = state[10] + state[13];
   out_6128971225621953021[1] = state[11] + state[14];
   out_6128971225621953021[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1892393878140881810) {
   out_1892393878140881810[0] = 0;
   out_1892393878140881810[1] = 0;
   out_1892393878140881810[2] = 0;
   out_1892393878140881810[3] = 0;
   out_1892393878140881810[4] = 0;
   out_1892393878140881810[5] = 0;
   out_1892393878140881810[6] = 0;
   out_1892393878140881810[7] = 0;
   out_1892393878140881810[8] = 0;
   out_1892393878140881810[9] = 0;
   out_1892393878140881810[10] = 1;
   out_1892393878140881810[11] = 0;
   out_1892393878140881810[12] = 0;
   out_1892393878140881810[13] = 1;
   out_1892393878140881810[14] = 0;
   out_1892393878140881810[15] = 0;
   out_1892393878140881810[16] = 0;
   out_1892393878140881810[17] = 0;
   out_1892393878140881810[18] = 0;
   out_1892393878140881810[19] = 0;
   out_1892393878140881810[20] = 0;
   out_1892393878140881810[21] = 0;
   out_1892393878140881810[22] = 0;
   out_1892393878140881810[23] = 0;
   out_1892393878140881810[24] = 0;
   out_1892393878140881810[25] = 0;
   out_1892393878140881810[26] = 0;
   out_1892393878140881810[27] = 0;
   out_1892393878140881810[28] = 0;
   out_1892393878140881810[29] = 0;
   out_1892393878140881810[30] = 0;
   out_1892393878140881810[31] = 0;
   out_1892393878140881810[32] = 0;
   out_1892393878140881810[33] = 1;
   out_1892393878140881810[34] = 0;
   out_1892393878140881810[35] = 0;
   out_1892393878140881810[36] = 1;
   out_1892393878140881810[37] = 0;
   out_1892393878140881810[38] = 0;
   out_1892393878140881810[39] = 0;
   out_1892393878140881810[40] = 0;
   out_1892393878140881810[41] = 0;
   out_1892393878140881810[42] = 0;
   out_1892393878140881810[43] = 0;
   out_1892393878140881810[44] = 0;
   out_1892393878140881810[45] = 0;
   out_1892393878140881810[46] = 0;
   out_1892393878140881810[47] = 0;
   out_1892393878140881810[48] = 0;
   out_1892393878140881810[49] = 0;
   out_1892393878140881810[50] = 0;
   out_1892393878140881810[51] = 0;
   out_1892393878140881810[52] = 0;
   out_1892393878140881810[53] = 0;
   out_1892393878140881810[54] = 0;
   out_1892393878140881810[55] = 0;
   out_1892393878140881810[56] = 1;
   out_1892393878140881810[57] = 0;
   out_1892393878140881810[58] = 0;
   out_1892393878140881810[59] = 1;
   out_1892393878140881810[60] = 0;
   out_1892393878140881810[61] = 0;
   out_1892393878140881810[62] = 0;
   out_1892393878140881810[63] = 0;
   out_1892393878140881810[64] = 0;
   out_1892393878140881810[65] = 0;
}
void h_9(double *state, double *unused, double *out_771804716078600861) {
   out_771804716078600861[0] = state[10];
   out_771804716078600861[1] = state[11];
   out_771804716078600861[2] = state[12];
}
void H_9(double *state, double *unused, double *out_996467674139197532) {
   out_996467674139197532[0] = 0;
   out_996467674139197532[1] = 0;
   out_996467674139197532[2] = 0;
   out_996467674139197532[3] = 0;
   out_996467674139197532[4] = 0;
   out_996467674139197532[5] = 0;
   out_996467674139197532[6] = 0;
   out_996467674139197532[7] = 0;
   out_996467674139197532[8] = 0;
   out_996467674139197532[9] = 0;
   out_996467674139197532[10] = 1;
   out_996467674139197532[11] = 0;
   out_996467674139197532[12] = 0;
   out_996467674139197532[13] = 0;
   out_996467674139197532[14] = 0;
   out_996467674139197532[15] = 0;
   out_996467674139197532[16] = 0;
   out_996467674139197532[17] = 0;
   out_996467674139197532[18] = 0;
   out_996467674139197532[19] = 0;
   out_996467674139197532[20] = 0;
   out_996467674139197532[21] = 0;
   out_996467674139197532[22] = 0;
   out_996467674139197532[23] = 0;
   out_996467674139197532[24] = 0;
   out_996467674139197532[25] = 0;
   out_996467674139197532[26] = 0;
   out_996467674139197532[27] = 0;
   out_996467674139197532[28] = 0;
   out_996467674139197532[29] = 0;
   out_996467674139197532[30] = 0;
   out_996467674139197532[31] = 0;
   out_996467674139197532[32] = 0;
   out_996467674139197532[33] = 1;
   out_996467674139197532[34] = 0;
   out_996467674139197532[35] = 0;
   out_996467674139197532[36] = 0;
   out_996467674139197532[37] = 0;
   out_996467674139197532[38] = 0;
   out_996467674139197532[39] = 0;
   out_996467674139197532[40] = 0;
   out_996467674139197532[41] = 0;
   out_996467674139197532[42] = 0;
   out_996467674139197532[43] = 0;
   out_996467674139197532[44] = 0;
   out_996467674139197532[45] = 0;
   out_996467674139197532[46] = 0;
   out_996467674139197532[47] = 0;
   out_996467674139197532[48] = 0;
   out_996467674139197532[49] = 0;
   out_996467674139197532[50] = 0;
   out_996467674139197532[51] = 0;
   out_996467674139197532[52] = 0;
   out_996467674139197532[53] = 0;
   out_996467674139197532[54] = 0;
   out_996467674139197532[55] = 0;
   out_996467674139197532[56] = 1;
   out_996467674139197532[57] = 0;
   out_996467674139197532[58] = 0;
   out_996467674139197532[59] = 0;
   out_996467674139197532[60] = 0;
   out_996467674139197532[61] = 0;
   out_996467674139197532[62] = 0;
   out_996467674139197532[63] = 0;
   out_996467674139197532[64] = 0;
   out_996467674139197532[65] = 0;
}
void h_10(double *state, double *unused, double *out_8834859403002773647) {
   out_8834859403002773647[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8834859403002773647[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8834859403002773647[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6626926868353906761) {
   out_6626926868353906761[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6626926868353906761[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6626926868353906761[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6626926868353906761[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6626926868353906761[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6626926868353906761[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6626926868353906761[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6626926868353906761[7] = 0;
   out_6626926868353906761[8] = 0;
   out_6626926868353906761[9] = 0;
   out_6626926868353906761[10] = 0;
   out_6626926868353906761[11] = 0;
   out_6626926868353906761[12] = 0;
   out_6626926868353906761[13] = 0;
   out_6626926868353906761[14] = 0;
   out_6626926868353906761[15] = 0;
   out_6626926868353906761[16] = 1;
   out_6626926868353906761[17] = 0;
   out_6626926868353906761[18] = 0;
   out_6626926868353906761[19] = 1;
   out_6626926868353906761[20] = 0;
   out_6626926868353906761[21] = 0;
   out_6626926868353906761[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6626926868353906761[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6626926868353906761[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6626926868353906761[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6626926868353906761[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6626926868353906761[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6626926868353906761[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6626926868353906761[29] = 0;
   out_6626926868353906761[30] = 0;
   out_6626926868353906761[31] = 0;
   out_6626926868353906761[32] = 0;
   out_6626926868353906761[33] = 0;
   out_6626926868353906761[34] = 0;
   out_6626926868353906761[35] = 0;
   out_6626926868353906761[36] = 0;
   out_6626926868353906761[37] = 0;
   out_6626926868353906761[38] = 0;
   out_6626926868353906761[39] = 1;
   out_6626926868353906761[40] = 0;
   out_6626926868353906761[41] = 0;
   out_6626926868353906761[42] = 1;
   out_6626926868353906761[43] = 0;
   out_6626926868353906761[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6626926868353906761[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6626926868353906761[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6626926868353906761[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6626926868353906761[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6626926868353906761[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6626926868353906761[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6626926868353906761[51] = 0;
   out_6626926868353906761[52] = 0;
   out_6626926868353906761[53] = 0;
   out_6626926868353906761[54] = 0;
   out_6626926868353906761[55] = 0;
   out_6626926868353906761[56] = 0;
   out_6626926868353906761[57] = 0;
   out_6626926868353906761[58] = 0;
   out_6626926868353906761[59] = 0;
   out_6626926868353906761[60] = 0;
   out_6626926868353906761[61] = 0;
   out_6626926868353906761[62] = 1;
   out_6626926868353906761[63] = 0;
   out_6626926868353906761[64] = 0;
   out_6626926868353906761[65] = 1;
}
void h_12(double *state, double *unused, double *out_4194655737861473773) {
   out_4194655737861473773[0] = state[0];
   out_4194655737861473773[1] = state[1];
   out_4194655737861473773[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1271294853093288143) {
   out_1271294853093288143[0] = 1;
   out_1271294853093288143[1] = 0;
   out_1271294853093288143[2] = 0;
   out_1271294853093288143[3] = 0;
   out_1271294853093288143[4] = 0;
   out_1271294853093288143[5] = 0;
   out_1271294853093288143[6] = 0;
   out_1271294853093288143[7] = 0;
   out_1271294853093288143[8] = 0;
   out_1271294853093288143[9] = 0;
   out_1271294853093288143[10] = 0;
   out_1271294853093288143[11] = 0;
   out_1271294853093288143[12] = 0;
   out_1271294853093288143[13] = 0;
   out_1271294853093288143[14] = 0;
   out_1271294853093288143[15] = 0;
   out_1271294853093288143[16] = 0;
   out_1271294853093288143[17] = 0;
   out_1271294853093288143[18] = 0;
   out_1271294853093288143[19] = 0;
   out_1271294853093288143[20] = 0;
   out_1271294853093288143[21] = 0;
   out_1271294853093288143[22] = 0;
   out_1271294853093288143[23] = 1;
   out_1271294853093288143[24] = 0;
   out_1271294853093288143[25] = 0;
   out_1271294853093288143[26] = 0;
   out_1271294853093288143[27] = 0;
   out_1271294853093288143[28] = 0;
   out_1271294853093288143[29] = 0;
   out_1271294853093288143[30] = 0;
   out_1271294853093288143[31] = 0;
   out_1271294853093288143[32] = 0;
   out_1271294853093288143[33] = 0;
   out_1271294853093288143[34] = 0;
   out_1271294853093288143[35] = 0;
   out_1271294853093288143[36] = 0;
   out_1271294853093288143[37] = 0;
   out_1271294853093288143[38] = 0;
   out_1271294853093288143[39] = 0;
   out_1271294853093288143[40] = 0;
   out_1271294853093288143[41] = 0;
   out_1271294853093288143[42] = 0;
   out_1271294853093288143[43] = 0;
   out_1271294853093288143[44] = 0;
   out_1271294853093288143[45] = 0;
   out_1271294853093288143[46] = 1;
   out_1271294853093288143[47] = 0;
   out_1271294853093288143[48] = 0;
   out_1271294853093288143[49] = 0;
   out_1271294853093288143[50] = 0;
   out_1271294853093288143[51] = 0;
   out_1271294853093288143[52] = 0;
   out_1271294853093288143[53] = 0;
   out_1271294853093288143[54] = 0;
   out_1271294853093288143[55] = 0;
   out_1271294853093288143[56] = 0;
   out_1271294853093288143[57] = 0;
   out_1271294853093288143[58] = 0;
   out_1271294853093288143[59] = 0;
   out_1271294853093288143[60] = 0;
   out_1271294853093288143[61] = 0;
   out_1271294853093288143[62] = 0;
   out_1271294853093288143[63] = 0;
   out_1271294853093288143[64] = 0;
   out_1271294853093288143[65] = 0;
}
void h_31(double *state, double *unused, double *out_7667153106358443581) {
   out_7667153106358443581[0] = state[7];
   out_7667153106358443581[1] = state[8];
   out_7667153106358443581[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1474268179231725566) {
   out_1474268179231725566[0] = 0;
   out_1474268179231725566[1] = 0;
   out_1474268179231725566[2] = 0;
   out_1474268179231725566[3] = 0;
   out_1474268179231725566[4] = 0;
   out_1474268179231725566[5] = 0;
   out_1474268179231725566[6] = 0;
   out_1474268179231725566[7] = 1;
   out_1474268179231725566[8] = 0;
   out_1474268179231725566[9] = 0;
   out_1474268179231725566[10] = 0;
   out_1474268179231725566[11] = 0;
   out_1474268179231725566[12] = 0;
   out_1474268179231725566[13] = 0;
   out_1474268179231725566[14] = 0;
   out_1474268179231725566[15] = 0;
   out_1474268179231725566[16] = 0;
   out_1474268179231725566[17] = 0;
   out_1474268179231725566[18] = 0;
   out_1474268179231725566[19] = 0;
   out_1474268179231725566[20] = 0;
   out_1474268179231725566[21] = 0;
   out_1474268179231725566[22] = 0;
   out_1474268179231725566[23] = 0;
   out_1474268179231725566[24] = 0;
   out_1474268179231725566[25] = 0;
   out_1474268179231725566[26] = 0;
   out_1474268179231725566[27] = 0;
   out_1474268179231725566[28] = 0;
   out_1474268179231725566[29] = 0;
   out_1474268179231725566[30] = 1;
   out_1474268179231725566[31] = 0;
   out_1474268179231725566[32] = 0;
   out_1474268179231725566[33] = 0;
   out_1474268179231725566[34] = 0;
   out_1474268179231725566[35] = 0;
   out_1474268179231725566[36] = 0;
   out_1474268179231725566[37] = 0;
   out_1474268179231725566[38] = 0;
   out_1474268179231725566[39] = 0;
   out_1474268179231725566[40] = 0;
   out_1474268179231725566[41] = 0;
   out_1474268179231725566[42] = 0;
   out_1474268179231725566[43] = 0;
   out_1474268179231725566[44] = 0;
   out_1474268179231725566[45] = 0;
   out_1474268179231725566[46] = 0;
   out_1474268179231725566[47] = 0;
   out_1474268179231725566[48] = 0;
   out_1474268179231725566[49] = 0;
   out_1474268179231725566[50] = 0;
   out_1474268179231725566[51] = 0;
   out_1474268179231725566[52] = 0;
   out_1474268179231725566[53] = 1;
   out_1474268179231725566[54] = 0;
   out_1474268179231725566[55] = 0;
   out_1474268179231725566[56] = 0;
   out_1474268179231725566[57] = 0;
   out_1474268179231725566[58] = 0;
   out_1474268179231725566[59] = 0;
   out_1474268179231725566[60] = 0;
   out_1474268179231725566[61] = 0;
   out_1474268179231725566[62] = 0;
   out_1474268179231725566[63] = 0;
   out_1474268179231725566[64] = 0;
   out_1474268179231725566[65] = 0;
}
void h_32(double *state, double *unused, double *out_5319208611029596904) {
   out_5319208611029596904[0] = state[3];
   out_5319208611029596904[1] = state[4];
   out_5319208611029596904[2] = state[5];
   out_5319208611029596904[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7275572551439338124) {
   out_7275572551439338124[0] = 0;
   out_7275572551439338124[1] = 0;
   out_7275572551439338124[2] = 0;
   out_7275572551439338124[3] = 1;
   out_7275572551439338124[4] = 0;
   out_7275572551439338124[5] = 0;
   out_7275572551439338124[6] = 0;
   out_7275572551439338124[7] = 0;
   out_7275572551439338124[8] = 0;
   out_7275572551439338124[9] = 0;
   out_7275572551439338124[10] = 0;
   out_7275572551439338124[11] = 0;
   out_7275572551439338124[12] = 0;
   out_7275572551439338124[13] = 0;
   out_7275572551439338124[14] = 0;
   out_7275572551439338124[15] = 0;
   out_7275572551439338124[16] = 0;
   out_7275572551439338124[17] = 0;
   out_7275572551439338124[18] = 0;
   out_7275572551439338124[19] = 0;
   out_7275572551439338124[20] = 0;
   out_7275572551439338124[21] = 0;
   out_7275572551439338124[22] = 0;
   out_7275572551439338124[23] = 0;
   out_7275572551439338124[24] = 0;
   out_7275572551439338124[25] = 0;
   out_7275572551439338124[26] = 1;
   out_7275572551439338124[27] = 0;
   out_7275572551439338124[28] = 0;
   out_7275572551439338124[29] = 0;
   out_7275572551439338124[30] = 0;
   out_7275572551439338124[31] = 0;
   out_7275572551439338124[32] = 0;
   out_7275572551439338124[33] = 0;
   out_7275572551439338124[34] = 0;
   out_7275572551439338124[35] = 0;
   out_7275572551439338124[36] = 0;
   out_7275572551439338124[37] = 0;
   out_7275572551439338124[38] = 0;
   out_7275572551439338124[39] = 0;
   out_7275572551439338124[40] = 0;
   out_7275572551439338124[41] = 0;
   out_7275572551439338124[42] = 0;
   out_7275572551439338124[43] = 0;
   out_7275572551439338124[44] = 0;
   out_7275572551439338124[45] = 0;
   out_7275572551439338124[46] = 0;
   out_7275572551439338124[47] = 0;
   out_7275572551439338124[48] = 0;
   out_7275572551439338124[49] = 1;
   out_7275572551439338124[50] = 0;
   out_7275572551439338124[51] = 0;
   out_7275572551439338124[52] = 0;
   out_7275572551439338124[53] = 0;
   out_7275572551439338124[54] = 0;
   out_7275572551439338124[55] = 0;
   out_7275572551439338124[56] = 0;
   out_7275572551439338124[57] = 0;
   out_7275572551439338124[58] = 0;
   out_7275572551439338124[59] = 0;
   out_7275572551439338124[60] = 0;
   out_7275572551439338124[61] = 0;
   out_7275572551439338124[62] = 0;
   out_7275572551439338124[63] = 0;
   out_7275572551439338124[64] = 0;
   out_7275572551439338124[65] = 0;
   out_7275572551439338124[66] = 0;
   out_7275572551439338124[67] = 0;
   out_7275572551439338124[68] = 0;
   out_7275572551439338124[69] = 0;
   out_7275572551439338124[70] = 0;
   out_7275572551439338124[71] = 0;
   out_7275572551439338124[72] = 1;
   out_7275572551439338124[73] = 0;
   out_7275572551439338124[74] = 0;
   out_7275572551439338124[75] = 0;
   out_7275572551439338124[76] = 0;
   out_7275572551439338124[77] = 0;
   out_7275572551439338124[78] = 0;
   out_7275572551439338124[79] = 0;
   out_7275572551439338124[80] = 0;
   out_7275572551439338124[81] = 0;
   out_7275572551439338124[82] = 0;
   out_7275572551439338124[83] = 0;
   out_7275572551439338124[84] = 0;
   out_7275572551439338124[85] = 0;
   out_7275572551439338124[86] = 0;
   out_7275572551439338124[87] = 0;
}
void h_13(double *state, double *unused, double *out_6041845049562932408) {
   out_6041845049562932408[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6041845049562932408[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6041845049562932408[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_595429171797323065) {
   out_595429171797323065[0] = 0;
   out_595429171797323065[1] = 0;
   out_595429171797323065[2] = 0;
   out_595429171797323065[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_595429171797323065[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_595429171797323065[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_595429171797323065[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_595429171797323065[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_595429171797323065[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_595429171797323065[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_595429171797323065[10] = 0;
   out_595429171797323065[11] = 0;
   out_595429171797323065[12] = 0;
   out_595429171797323065[13] = 0;
   out_595429171797323065[14] = 0;
   out_595429171797323065[15] = 0;
   out_595429171797323065[16] = 0;
   out_595429171797323065[17] = 0;
   out_595429171797323065[18] = 0;
   out_595429171797323065[19] = 0;
   out_595429171797323065[20] = 0;
   out_595429171797323065[21] = 0;
   out_595429171797323065[22] = 0;
   out_595429171797323065[23] = 0;
   out_595429171797323065[24] = 0;
   out_595429171797323065[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_595429171797323065[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_595429171797323065[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_595429171797323065[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_595429171797323065[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_595429171797323065[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_595429171797323065[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_595429171797323065[32] = 0;
   out_595429171797323065[33] = 0;
   out_595429171797323065[34] = 0;
   out_595429171797323065[35] = 0;
   out_595429171797323065[36] = 0;
   out_595429171797323065[37] = 0;
   out_595429171797323065[38] = 0;
   out_595429171797323065[39] = 0;
   out_595429171797323065[40] = 0;
   out_595429171797323065[41] = 0;
   out_595429171797323065[42] = 0;
   out_595429171797323065[43] = 0;
   out_595429171797323065[44] = 0;
   out_595429171797323065[45] = 0;
   out_595429171797323065[46] = 0;
   out_595429171797323065[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_595429171797323065[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_595429171797323065[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_595429171797323065[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_595429171797323065[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_595429171797323065[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_595429171797323065[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_595429171797323065[54] = 0;
   out_595429171797323065[55] = 0;
   out_595429171797323065[56] = 0;
   out_595429171797323065[57] = 0;
   out_595429171797323065[58] = 0;
   out_595429171797323065[59] = 0;
   out_595429171797323065[60] = 0;
   out_595429171797323065[61] = 0;
   out_595429171797323065[62] = 0;
   out_595429171797323065[63] = 0;
   out_595429171797323065[64] = 0;
   out_595429171797323065[65] = 0;
}
void h_14(double *state, double *unused, double *out_771804716078600861) {
   out_771804716078600861[0] = state[10];
   out_771804716078600861[1] = state[11];
   out_771804716078600861[2] = state[12];
}
void H_14(double *state, double *unused, double *out_996467674139197532) {
   out_996467674139197532[0] = 0;
   out_996467674139197532[1] = 0;
   out_996467674139197532[2] = 0;
   out_996467674139197532[3] = 0;
   out_996467674139197532[4] = 0;
   out_996467674139197532[5] = 0;
   out_996467674139197532[6] = 0;
   out_996467674139197532[7] = 0;
   out_996467674139197532[8] = 0;
   out_996467674139197532[9] = 0;
   out_996467674139197532[10] = 1;
   out_996467674139197532[11] = 0;
   out_996467674139197532[12] = 0;
   out_996467674139197532[13] = 0;
   out_996467674139197532[14] = 0;
   out_996467674139197532[15] = 0;
   out_996467674139197532[16] = 0;
   out_996467674139197532[17] = 0;
   out_996467674139197532[18] = 0;
   out_996467674139197532[19] = 0;
   out_996467674139197532[20] = 0;
   out_996467674139197532[21] = 0;
   out_996467674139197532[22] = 0;
   out_996467674139197532[23] = 0;
   out_996467674139197532[24] = 0;
   out_996467674139197532[25] = 0;
   out_996467674139197532[26] = 0;
   out_996467674139197532[27] = 0;
   out_996467674139197532[28] = 0;
   out_996467674139197532[29] = 0;
   out_996467674139197532[30] = 0;
   out_996467674139197532[31] = 0;
   out_996467674139197532[32] = 0;
   out_996467674139197532[33] = 1;
   out_996467674139197532[34] = 0;
   out_996467674139197532[35] = 0;
   out_996467674139197532[36] = 0;
   out_996467674139197532[37] = 0;
   out_996467674139197532[38] = 0;
   out_996467674139197532[39] = 0;
   out_996467674139197532[40] = 0;
   out_996467674139197532[41] = 0;
   out_996467674139197532[42] = 0;
   out_996467674139197532[43] = 0;
   out_996467674139197532[44] = 0;
   out_996467674139197532[45] = 0;
   out_996467674139197532[46] = 0;
   out_996467674139197532[47] = 0;
   out_996467674139197532[48] = 0;
   out_996467674139197532[49] = 0;
   out_996467674139197532[50] = 0;
   out_996467674139197532[51] = 0;
   out_996467674139197532[52] = 0;
   out_996467674139197532[53] = 0;
   out_996467674139197532[54] = 0;
   out_996467674139197532[55] = 0;
   out_996467674139197532[56] = 1;
   out_996467674139197532[57] = 0;
   out_996467674139197532[58] = 0;
   out_996467674139197532[59] = 0;
   out_996467674139197532[60] = 0;
   out_996467674139197532[61] = 0;
   out_996467674139197532[62] = 0;
   out_996467674139197532[63] = 0;
   out_996467674139197532[64] = 0;
   out_996467674139197532[65] = 0;
}
void h_33(double *state, double *unused, double *out_5377665374765292145) {
   out_5377665374765292145[0] = state[16];
   out_5377665374765292145[1] = state[17];
   out_5377665374765292145[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4624825183870583170) {
   out_4624825183870583170[0] = 0;
   out_4624825183870583170[1] = 0;
   out_4624825183870583170[2] = 0;
   out_4624825183870583170[3] = 0;
   out_4624825183870583170[4] = 0;
   out_4624825183870583170[5] = 0;
   out_4624825183870583170[6] = 0;
   out_4624825183870583170[7] = 0;
   out_4624825183870583170[8] = 0;
   out_4624825183870583170[9] = 0;
   out_4624825183870583170[10] = 0;
   out_4624825183870583170[11] = 0;
   out_4624825183870583170[12] = 0;
   out_4624825183870583170[13] = 0;
   out_4624825183870583170[14] = 0;
   out_4624825183870583170[15] = 0;
   out_4624825183870583170[16] = 1;
   out_4624825183870583170[17] = 0;
   out_4624825183870583170[18] = 0;
   out_4624825183870583170[19] = 0;
   out_4624825183870583170[20] = 0;
   out_4624825183870583170[21] = 0;
   out_4624825183870583170[22] = 0;
   out_4624825183870583170[23] = 0;
   out_4624825183870583170[24] = 0;
   out_4624825183870583170[25] = 0;
   out_4624825183870583170[26] = 0;
   out_4624825183870583170[27] = 0;
   out_4624825183870583170[28] = 0;
   out_4624825183870583170[29] = 0;
   out_4624825183870583170[30] = 0;
   out_4624825183870583170[31] = 0;
   out_4624825183870583170[32] = 0;
   out_4624825183870583170[33] = 0;
   out_4624825183870583170[34] = 0;
   out_4624825183870583170[35] = 0;
   out_4624825183870583170[36] = 0;
   out_4624825183870583170[37] = 0;
   out_4624825183870583170[38] = 0;
   out_4624825183870583170[39] = 1;
   out_4624825183870583170[40] = 0;
   out_4624825183870583170[41] = 0;
   out_4624825183870583170[42] = 0;
   out_4624825183870583170[43] = 0;
   out_4624825183870583170[44] = 0;
   out_4624825183870583170[45] = 0;
   out_4624825183870583170[46] = 0;
   out_4624825183870583170[47] = 0;
   out_4624825183870583170[48] = 0;
   out_4624825183870583170[49] = 0;
   out_4624825183870583170[50] = 0;
   out_4624825183870583170[51] = 0;
   out_4624825183870583170[52] = 0;
   out_4624825183870583170[53] = 0;
   out_4624825183870583170[54] = 0;
   out_4624825183870583170[55] = 0;
   out_4624825183870583170[56] = 0;
   out_4624825183870583170[57] = 0;
   out_4624825183870583170[58] = 0;
   out_4624825183870583170[59] = 0;
   out_4624825183870583170[60] = 0;
   out_4624825183870583170[61] = 0;
   out_4624825183870583170[62] = 1;
   out_4624825183870583170[63] = 0;
   out_4624825183870583170[64] = 0;
   out_4624825183870583170[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1500569955103598890) {
  H(in_vec, out_1500569955103598890);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6370410215467224596) {
  err_fun(nom_x, delta_x, out_6370410215467224596);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4404289754720028568) {
  inv_err_fun(nom_x, true_x, out_4404289754720028568);
}
void live_H_mod_fun(double *state, double *out_65844624761511818) {
  H_mod_fun(state, out_65844624761511818);
}
void live_f_fun(double *state, double dt, double *out_4639761141299267529) {
  f_fun(state,  dt, out_4639761141299267529);
}
void live_F_fun(double *state, double dt, double *out_2080679607502804155) {
  F_fun(state,  dt, out_2080679607502804155);
}
void live_h_4(double *state, double *unused, double *out_6128971225621953021) {
  h_4(state, unused, out_6128971225621953021);
}
void live_H_4(double *state, double *unused, double *out_1892393878140881810) {
  H_4(state, unused, out_1892393878140881810);
}
void live_h_9(double *state, double *unused, double *out_771804716078600861) {
  h_9(state, unused, out_771804716078600861);
}
void live_H_9(double *state, double *unused, double *out_996467674139197532) {
  H_9(state, unused, out_996467674139197532);
}
void live_h_10(double *state, double *unused, double *out_8834859403002773647) {
  h_10(state, unused, out_8834859403002773647);
}
void live_H_10(double *state, double *unused, double *out_6626926868353906761) {
  H_10(state, unused, out_6626926868353906761);
}
void live_h_12(double *state, double *unused, double *out_4194655737861473773) {
  h_12(state, unused, out_4194655737861473773);
}
void live_H_12(double *state, double *unused, double *out_1271294853093288143) {
  H_12(state, unused, out_1271294853093288143);
}
void live_h_31(double *state, double *unused, double *out_7667153106358443581) {
  h_31(state, unused, out_7667153106358443581);
}
void live_H_31(double *state, double *unused, double *out_1474268179231725566) {
  H_31(state, unused, out_1474268179231725566);
}
void live_h_32(double *state, double *unused, double *out_5319208611029596904) {
  h_32(state, unused, out_5319208611029596904);
}
void live_H_32(double *state, double *unused, double *out_7275572551439338124) {
  H_32(state, unused, out_7275572551439338124);
}
void live_h_13(double *state, double *unused, double *out_6041845049562932408) {
  h_13(state, unused, out_6041845049562932408);
}
void live_H_13(double *state, double *unused, double *out_595429171797323065) {
  H_13(state, unused, out_595429171797323065);
}
void live_h_14(double *state, double *unused, double *out_771804716078600861) {
  h_14(state, unused, out_771804716078600861);
}
void live_H_14(double *state, double *unused, double *out_996467674139197532) {
  H_14(state, unused, out_996467674139197532);
}
void live_h_33(double *state, double *unused, double *out_5377665374765292145) {
  h_33(state, unused, out_5377665374765292145);
}
void live_H_33(double *state, double *unused, double *out_4624825183870583170) {
  H_33(state, unused, out_4624825183870583170);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
